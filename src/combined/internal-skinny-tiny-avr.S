#if defined(__AVR__)
/*
 * Copyright (C) 2021 Southern Storm Software, Pty Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <avr/io.h>
/* Automatically generated - do not edit */

	.section	.progmem.data,"a",@progbits
	.p2align	8
	.type	table_0, @object
	.size	table_0, 256
table_0:
	.byte	101
	.byte	76
	.byte	106
	.byte	66
	.byte	75
	.byte	99
	.byte	67
	.byte	107
	.byte	85
	.byte	117
	.byte	90
	.byte	122
	.byte	83
	.byte	115
	.byte	91
	.byte	123
	.byte	53
	.byte	140
	.byte	58
	.byte	129
	.byte	137
	.byte	51
	.byte	128
	.byte	59
	.byte	149
	.byte	37
	.byte	152
	.byte	42
	.byte	144
	.byte	35
	.byte	153
	.byte	43
	.byte	229
	.byte	204
	.byte	232
	.byte	193
	.byte	201
	.byte	224
	.byte	192
	.byte	233
	.byte	213
	.byte	245
	.byte	216
	.byte	248
	.byte	208
	.byte	240
	.byte	217
	.byte	249
	.byte	165
	.byte	28
	.byte	168
	.byte	18
	.byte	27
	.byte	160
	.byte	19
	.byte	169
	.byte	5
	.byte	181
	.byte	10
	.byte	184
	.byte	3
	.byte	176
	.byte	11
	.byte	185
	.byte	50
	.byte	136
	.byte	60
	.byte	133
	.byte	141
	.byte	52
	.byte	132
	.byte	61
	.byte	145
	.byte	34
	.byte	156
	.byte	44
	.byte	148
	.byte	36
	.byte	157
	.byte	45
	.byte	98
	.byte	74
	.byte	108
	.byte	69
	.byte	77
	.byte	100
	.byte	68
	.byte	109
	.byte	82
	.byte	114
	.byte	92
	.byte	124
	.byte	84
	.byte	116
	.byte	93
	.byte	125
	.byte	161
	.byte	26
	.byte	172
	.byte	21
	.byte	29
	.byte	164
	.byte	20
	.byte	173
	.byte	2
	.byte	177
	.byte	12
	.byte	188
	.byte	4
	.byte	180
	.byte	13
	.byte	189
	.byte	225
	.byte	200
	.byte	236
	.byte	197
	.byte	205
	.byte	228
	.byte	196
	.byte	237
	.byte	209
	.byte	241
	.byte	220
	.byte	252
	.byte	212
	.byte	244
	.byte	221
	.byte	253
	.byte	54
	.byte	142
	.byte	56
	.byte	130
	.byte	139
	.byte	48
	.byte	131
	.byte	57
	.byte	150
	.byte	38
	.byte	154
	.byte	40
	.byte	147
	.byte	32
	.byte	155
	.byte	41
	.byte	102
	.byte	78
	.byte	104
	.byte	65
	.byte	73
	.byte	96
	.byte	64
	.byte	105
	.byte	86
	.byte	118
	.byte	88
	.byte	120
	.byte	80
	.byte	112
	.byte	89
	.byte	121
	.byte	166
	.byte	30
	.byte	170
	.byte	17
	.byte	25
	.byte	163
	.byte	16
	.byte	171
	.byte	6
	.byte	182
	.byte	8
	.byte	186
	.byte	0
	.byte	179
	.byte	9
	.byte	187
	.byte	230
	.byte	206
	.byte	234
	.byte	194
	.byte	203
	.byte	227
	.byte	195
	.byte	235
	.byte	214
	.byte	246
	.byte	218
	.byte	250
	.byte	211
	.byte	243
	.byte	219
	.byte	251
	.byte	49
	.byte	138
	.byte	62
	.byte	134
	.byte	143
	.byte	55
	.byte	135
	.byte	63
	.byte	146
	.byte	33
	.byte	158
	.byte	46
	.byte	151
	.byte	39
	.byte	159
	.byte	47
	.byte	97
	.byte	72
	.byte	110
	.byte	70
	.byte	79
	.byte	103
	.byte	71
	.byte	111
	.byte	81
	.byte	113
	.byte	94
	.byte	126
	.byte	87
	.byte	119
	.byte	95
	.byte	127
	.byte	162
	.byte	24
	.byte	174
	.byte	22
	.byte	31
	.byte	167
	.byte	23
	.byte	175
	.byte	1
	.byte	178
	.byte	14
	.byte	190
	.byte	7
	.byte	183
	.byte	15
	.byte	191
	.byte	226
	.byte	202
	.byte	238
	.byte	198
	.byte	207
	.byte	231
	.byte	199
	.byte	239
	.byte	210
	.byte	242
	.byte	222
	.byte	254
	.byte	215
	.byte	247
	.byte	223
	.byte	255

	.section	.progmem.data,"a",@progbits
	.p2align	8
	.type	table_1, @object
	.size	table_1, 256
table_1:
	.byte	172
	.byte	232
	.byte	104
	.byte	60
	.byte	108
	.byte	56
	.byte	168
	.byte	236
	.byte	170
	.byte	174
	.byte	58
	.byte	62
	.byte	106
	.byte	110
	.byte	234
	.byte	238
	.byte	166
	.byte	163
	.byte	51
	.byte	54
	.byte	102
	.byte	99
	.byte	227
	.byte	230
	.byte	225
	.byte	164
	.byte	97
	.byte	52
	.byte	49
	.byte	100
	.byte	161
	.byte	228
	.byte	141
	.byte	201
	.byte	73
	.byte	29
	.byte	77
	.byte	25
	.byte	137
	.byte	205
	.byte	139
	.byte	143
	.byte	27
	.byte	31
	.byte	75
	.byte	79
	.byte	203
	.byte	207
	.byte	133
	.byte	192
	.byte	64
	.byte	21
	.byte	69
	.byte	16
	.byte	128
	.byte	197
	.byte	130
	.byte	135
	.byte	18
	.byte	23
	.byte	66
	.byte	71
	.byte	194
	.byte	199
	.byte	150
	.byte	147
	.byte	3
	.byte	6
	.byte	86
	.byte	83
	.byte	211
	.byte	214
	.byte	209
	.byte	148
	.byte	81
	.byte	4
	.byte	1
	.byte	84
	.byte	145
	.byte	212
	.byte	156
	.byte	216
	.byte	88
	.byte	12
	.byte	92
	.byte	8
	.byte	152
	.byte	220
	.byte	154
	.byte	158
	.byte	10
	.byte	14
	.byte	90
	.byte	94
	.byte	218
	.byte	222
	.byte	149
	.byte	208
	.byte	80
	.byte	5
	.byte	85
	.byte	0
	.byte	144
	.byte	213
	.byte	146
	.byte	151
	.byte	2
	.byte	7
	.byte	82
	.byte	87
	.byte	210
	.byte	215
	.byte	157
	.byte	217
	.byte	89
	.byte	13
	.byte	93
	.byte	9
	.byte	153
	.byte	221
	.byte	155
	.byte	159
	.byte	11
	.byte	15
	.byte	91
	.byte	95
	.byte	219
	.byte	223
	.byte	22
	.byte	19
	.byte	131
	.byte	134
	.byte	70
	.byte	67
	.byte	195
	.byte	198
	.byte	65
	.byte	20
	.byte	193
	.byte	132
	.byte	17
	.byte	68
	.byte	129
	.byte	196
	.byte	28
	.byte	72
	.byte	200
	.byte	140
	.byte	76
	.byte	24
	.byte	136
	.byte	204
	.byte	26
	.byte	30
	.byte	138
	.byte	142
	.byte	74
	.byte	78
	.byte	202
	.byte	206
	.byte	53
	.byte	96
	.byte	224
	.byte	165
	.byte	101
	.byte	48
	.byte	160
	.byte	229
	.byte	50
	.byte	55
	.byte	162
	.byte	167
	.byte	98
	.byte	103
	.byte	226
	.byte	231
	.byte	61
	.byte	105
	.byte	233
	.byte	173
	.byte	109
	.byte	57
	.byte	169
	.byte	237
	.byte	59
	.byte	63
	.byte	171
	.byte	175
	.byte	107
	.byte	111
	.byte	235
	.byte	239
	.byte	38
	.byte	35
	.byte	179
	.byte	182
	.byte	118
	.byte	115
	.byte	243
	.byte	246
	.byte	113
	.byte	36
	.byte	241
	.byte	180
	.byte	33
	.byte	116
	.byte	177
	.byte	244
	.byte	44
	.byte	120
	.byte	248
	.byte	188
	.byte	124
	.byte	40
	.byte	184
	.byte	252
	.byte	42
	.byte	46
	.byte	186
	.byte	190
	.byte	122
	.byte	126
	.byte	250
	.byte	254
	.byte	37
	.byte	112
	.byte	240
	.byte	181
	.byte	117
	.byte	32
	.byte	176
	.byte	245
	.byte	34
	.byte	39
	.byte	178
	.byte	183
	.byte	114
	.byte	119
	.byte	242
	.byte	247
	.byte	45
	.byte	121
	.byte	249
	.byte	189
	.byte	125
	.byte	41
	.byte	185
	.byte	253
	.byte	43
	.byte	47
	.byte	187
	.byte	191
	.byte	123
	.byte	127
	.byte	251
	.byte	255

	.section	.progmem.data,"a",@progbits
	.p2align	8
	.type	table_2, @object
	.size	table_2, 256
table_2:
	.byte	0
	.byte	2
	.byte	4
	.byte	6
	.byte	8
	.byte	10
	.byte	12
	.byte	14
	.byte	16
	.byte	18
	.byte	20
	.byte	22
	.byte	24
	.byte	26
	.byte	28
	.byte	30
	.byte	32
	.byte	34
	.byte	36
	.byte	38
	.byte	40
	.byte	42
	.byte	44
	.byte	46
	.byte	48
	.byte	50
	.byte	52
	.byte	54
	.byte	56
	.byte	58
	.byte	60
	.byte	62
	.byte	65
	.byte	67
	.byte	69
	.byte	71
	.byte	73
	.byte	75
	.byte	77
	.byte	79
	.byte	81
	.byte	83
	.byte	85
	.byte	87
	.byte	89
	.byte	91
	.byte	93
	.byte	95
	.byte	97
	.byte	99
	.byte	101
	.byte	103
	.byte	105
	.byte	107
	.byte	109
	.byte	111
	.byte	113
	.byte	115
	.byte	117
	.byte	119
	.byte	121
	.byte	123
	.byte	125
	.byte	127
	.byte	128
	.byte	130
	.byte	132
	.byte	134
	.byte	136
	.byte	138
	.byte	140
	.byte	142
	.byte	144
	.byte	146
	.byte	148
	.byte	150
	.byte	152
	.byte	154
	.byte	156
	.byte	158
	.byte	160
	.byte	162
	.byte	164
	.byte	166
	.byte	168
	.byte	170
	.byte	172
	.byte	174
	.byte	176
	.byte	178
	.byte	180
	.byte	182
	.byte	184
	.byte	186
	.byte	188
	.byte	190
	.byte	193
	.byte	195
	.byte	197
	.byte	199
	.byte	201
	.byte	203
	.byte	205
	.byte	207
	.byte	209
	.byte	211
	.byte	213
	.byte	215
	.byte	217
	.byte	219
	.byte	221
	.byte	223
	.byte	225
	.byte	227
	.byte	229
	.byte	231
	.byte	233
	.byte	235
	.byte	237
	.byte	239
	.byte	241
	.byte	243
	.byte	245
	.byte	247
	.byte	249
	.byte	251
	.byte	253
	.byte	255
	.byte	1
	.byte	3
	.byte	5
	.byte	7
	.byte	9
	.byte	11
	.byte	13
	.byte	15
	.byte	17
	.byte	19
	.byte	21
	.byte	23
	.byte	25
	.byte	27
	.byte	29
	.byte	31
	.byte	33
	.byte	35
	.byte	37
	.byte	39
	.byte	41
	.byte	43
	.byte	45
	.byte	47
	.byte	49
	.byte	51
	.byte	53
	.byte	55
	.byte	57
	.byte	59
	.byte	61
	.byte	63
	.byte	64
	.byte	66
	.byte	68
	.byte	70
	.byte	72
	.byte	74
	.byte	76
	.byte	78
	.byte	80
	.byte	82
	.byte	84
	.byte	86
	.byte	88
	.byte	90
	.byte	92
	.byte	94
	.byte	96
	.byte	98
	.byte	100
	.byte	102
	.byte	104
	.byte	106
	.byte	108
	.byte	110
	.byte	112
	.byte	114
	.byte	116
	.byte	118
	.byte	120
	.byte	122
	.byte	124
	.byte	126
	.byte	129
	.byte	131
	.byte	133
	.byte	135
	.byte	137
	.byte	139
	.byte	141
	.byte	143
	.byte	145
	.byte	147
	.byte	149
	.byte	151
	.byte	153
	.byte	155
	.byte	157
	.byte	159
	.byte	161
	.byte	163
	.byte	165
	.byte	167
	.byte	169
	.byte	171
	.byte	173
	.byte	175
	.byte	177
	.byte	179
	.byte	181
	.byte	183
	.byte	185
	.byte	187
	.byte	189
	.byte	191
	.byte	192
	.byte	194
	.byte	196
	.byte	198
	.byte	200
	.byte	202
	.byte	204
	.byte	206
	.byte	208
	.byte	210
	.byte	212
	.byte	214
	.byte	216
	.byte	218
	.byte	220
	.byte	222
	.byte	224
	.byte	226
	.byte	228
	.byte	230
	.byte	232
	.byte	234
	.byte	236
	.byte	238
	.byte	240
	.byte	242
	.byte	244
	.byte	246
	.byte	248
	.byte	250
	.byte	252
	.byte	254

	.section	.progmem.data,"a",@progbits
	.p2align	8
	.type	table_3, @object
	.size	table_3, 256
table_3:
	.byte	0
	.byte	128
	.byte	1
	.byte	129
	.byte	2
	.byte	130
	.byte	3
	.byte	131
	.byte	4
	.byte	132
	.byte	5
	.byte	133
	.byte	6
	.byte	134
	.byte	7
	.byte	135
	.byte	8
	.byte	136
	.byte	9
	.byte	137
	.byte	10
	.byte	138
	.byte	11
	.byte	139
	.byte	12
	.byte	140
	.byte	13
	.byte	141
	.byte	14
	.byte	142
	.byte	15
	.byte	143
	.byte	16
	.byte	144
	.byte	17
	.byte	145
	.byte	18
	.byte	146
	.byte	19
	.byte	147
	.byte	20
	.byte	148
	.byte	21
	.byte	149
	.byte	22
	.byte	150
	.byte	23
	.byte	151
	.byte	24
	.byte	152
	.byte	25
	.byte	153
	.byte	26
	.byte	154
	.byte	27
	.byte	155
	.byte	28
	.byte	156
	.byte	29
	.byte	157
	.byte	30
	.byte	158
	.byte	31
	.byte	159
	.byte	160
	.byte	32
	.byte	161
	.byte	33
	.byte	162
	.byte	34
	.byte	163
	.byte	35
	.byte	164
	.byte	36
	.byte	165
	.byte	37
	.byte	166
	.byte	38
	.byte	167
	.byte	39
	.byte	168
	.byte	40
	.byte	169
	.byte	41
	.byte	170
	.byte	42
	.byte	171
	.byte	43
	.byte	172
	.byte	44
	.byte	173
	.byte	45
	.byte	174
	.byte	46
	.byte	175
	.byte	47
	.byte	176
	.byte	48
	.byte	177
	.byte	49
	.byte	178
	.byte	50
	.byte	179
	.byte	51
	.byte	180
	.byte	52
	.byte	181
	.byte	53
	.byte	182
	.byte	54
	.byte	183
	.byte	55
	.byte	184
	.byte	56
	.byte	185
	.byte	57
	.byte	186
	.byte	58
	.byte	187
	.byte	59
	.byte	188
	.byte	60
	.byte	189
	.byte	61
	.byte	190
	.byte	62
	.byte	191
	.byte	63
	.byte	64
	.byte	192
	.byte	65
	.byte	193
	.byte	66
	.byte	194
	.byte	67
	.byte	195
	.byte	68
	.byte	196
	.byte	69
	.byte	197
	.byte	70
	.byte	198
	.byte	71
	.byte	199
	.byte	72
	.byte	200
	.byte	73
	.byte	201
	.byte	74
	.byte	202
	.byte	75
	.byte	203
	.byte	76
	.byte	204
	.byte	77
	.byte	205
	.byte	78
	.byte	206
	.byte	79
	.byte	207
	.byte	80
	.byte	208
	.byte	81
	.byte	209
	.byte	82
	.byte	210
	.byte	83
	.byte	211
	.byte	84
	.byte	212
	.byte	85
	.byte	213
	.byte	86
	.byte	214
	.byte	87
	.byte	215
	.byte	88
	.byte	216
	.byte	89
	.byte	217
	.byte	90
	.byte	218
	.byte	91
	.byte	219
	.byte	92
	.byte	220
	.byte	93
	.byte	221
	.byte	94
	.byte	222
	.byte	95
	.byte	223
	.byte	224
	.byte	96
	.byte	225
	.byte	97
	.byte	226
	.byte	98
	.byte	227
	.byte	99
	.byte	228
	.byte	100
	.byte	229
	.byte	101
	.byte	230
	.byte	102
	.byte	231
	.byte	103
	.byte	232
	.byte	104
	.byte	233
	.byte	105
	.byte	234
	.byte	106
	.byte	235
	.byte	107
	.byte	236
	.byte	108
	.byte	237
	.byte	109
	.byte	238
	.byte	110
	.byte	239
	.byte	111
	.byte	240
	.byte	112
	.byte	241
	.byte	113
	.byte	242
	.byte	114
	.byte	243
	.byte	115
	.byte	244
	.byte	116
	.byte	245
	.byte	117
	.byte	246
	.byte	118
	.byte	247
	.byte	119
	.byte	248
	.byte	120
	.byte	249
	.byte	121
	.byte	250
	.byte	122
	.byte	251
	.byte	123
	.byte	252
	.byte	124
	.byte	253
	.byte	125
	.byte	254
	.byte	126
	.byte	255
	.byte	127

	.section	.progmem.data,"a",@progbits
	.p2align	8
	.type	table_4, @object
	.size	table_4, 112
table_4:
	.byte	1
	.byte	0
	.byte	3
	.byte	0
	.byte	7
	.byte	0
	.byte	15
	.byte	0
	.byte	15
	.byte	1
	.byte	14
	.byte	3
	.byte	13
	.byte	3
	.byte	11
	.byte	3
	.byte	7
	.byte	3
	.byte	15
	.byte	2
	.byte	14
	.byte	1
	.byte	12
	.byte	3
	.byte	9
	.byte	3
	.byte	3
	.byte	3
	.byte	7
	.byte	2
	.byte	14
	.byte	0
	.byte	13
	.byte	1
	.byte	10
	.byte	3
	.byte	5
	.byte	3
	.byte	11
	.byte	2
	.byte	6
	.byte	1
	.byte	12
	.byte	2
	.byte	8
	.byte	1
	.byte	0
	.byte	3
	.byte	1
	.byte	2
	.byte	2
	.byte	0
	.byte	5
	.byte	0
	.byte	11
	.byte	0
	.byte	7
	.byte	1
	.byte	14
	.byte	2
	.byte	12
	.byte	1
	.byte	8
	.byte	3
	.byte	1
	.byte	3
	.byte	3
	.byte	2
	.byte	6
	.byte	0
	.byte	13
	.byte	0
	.byte	11
	.byte	1
	.byte	6
	.byte	3
	.byte	13
	.byte	2
	.byte	10
	.byte	1
	.byte	4
	.byte	3
	.byte	9
	.byte	2
	.byte	2
	.byte	1
	.byte	4
	.byte	2
	.byte	8
	.byte	0
	.byte	1
	.byte	1
	.byte	2
	.byte	2
	.byte	4
	.byte	0
	.byte	9
	.byte	0
	.byte	3
	.byte	1
	.byte	6
	.byte	2
	.byte	12
	.byte	0
	.byte	9
	.byte	1
	.byte	2
	.byte	3
	.byte	5
	.byte	2
	.byte	10
	.byte	0

	.text
.global skinny_plus_init_without_tk1
	.type skinny_plus_init_without_tk1, @function
skinny_plus_init_without_tk1:
	push r28
	push r29
	movw r30,r24
	movw r26,r22
.L__stack_usage = 2
	movw r28,r20
	adiw r30,16
	ld r18,X+
	ld r19,X+
	ld r22,X+
	ld r23,X+
	st Z+,r18
	st Z+,r19
	st Z+,r22
	st Z+,r23
	ld r18,X+
	ld r19,X+
	ld r22,X+
	ld r23,X+
	st Z+,r18
	st Z+,r19
	st Z+,r22
	st Z+,r23
	ld r18,X+
	ld r19,X+
	ld r22,X+
	ld r23,X+
	st Z+,r18
	st Z+,r19
	st Z+,r22
	st Z+,r23
	ld r18,X+
	ld r19,X+
	ld r22,X+
	ld r23,X+
	st Z+,r18
	st Z+,r19
	st Z+,r22
	st Z+,r23
	ld r18,Y+
	ld r19,Y+
	ld r22,Y+
	ld r23,Y+
	st Z+,r18
	st Z+,r19
	st Z+,r22
	st Z+,r23
	ld r18,Y+
	ld r19,Y+
	ld r22,Y+
	ld r23,Y+
	st Z+,r18
	st Z+,r19
	st Z+,r22
	st Z+,r23
	ld r18,Y+
	ld r19,Y+
	ld r22,Y+
	ld r23,Y+
	st Z+,r18
	st Z+,r19
	st Z+,r22
	st Z+,r23
	ld r18,Y+
	ld r19,Y+
	ld r22,Y+
	ld r23,Y+
	st Z+,r18
	st Z+,r19
	st Z+,r22
	st Z+,r23
	pop r29
	pop r28
	ret
	.size skinny_plus_init_without_tk1, .-skinny_plus_init_without_tk1

	.text
.global skinny_plus_encrypt
	.type skinny_plus_encrypt, @function
skinny_plus_encrypt:
	push r28
	push r29
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r23
	push r22
	movw r30,r24
	movw r26,r20
	in r28,0x3d
	in r29,0x3e
	sbiw r28,48
	in r0,0x3f
	cli
	out 0x3e,r29
	out 0x3f,r0
	out 0x3d,r28
.L__stack_usage = 68
	ld r18,Z
	ldd r19,Z+1
	ldd r20,Z+2
	ldd r21,Z+3
	std Y+1,r18
	std Y+2,r19
	std Y+3,r20
	std Y+4,r21
	ldd r18,Z+4
	ldd r19,Z+5
	ldd r20,Z+6
	ldd r21,Z+7
	std Y+5,r18
	std Y+6,r19
	std Y+7,r20
	std Y+8,r21
	ldd r18,Z+8
	ldd r19,Z+9
	ldd r20,Z+10
	ldd r21,Z+11
	std Y+9,r18
	std Y+10,r19
	std Y+11,r20
	std Y+12,r21
	ldd r18,Z+12
	ldd r19,Z+13
	ldd r20,Z+14
	ldd r21,Z+15
	std Y+13,r18
	std Y+14,r19
	std Y+15,r20
	std Y+16,r21
	ldd r18,Z+16
	ldd r19,Z+17
	ldd r20,Z+18
	ldd r21,Z+19
	std Y+17,r18
	std Y+18,r19
	std Y+19,r20
	std Y+20,r21
	ldd r18,Z+20
	ldd r19,Z+21
	ldd r20,Z+22
	ldd r21,Z+23
	std Y+21,r18
	std Y+22,r19
	std Y+23,r20
	std Y+24,r21
	ldd r18,Z+24
	ldd r19,Z+25
	ldd r20,Z+26
	ldd r21,Z+27
	std Y+25,r18
	std Y+26,r19
	std Y+27,r20
	std Y+28,r21
	ldd r18,Z+28
	ldd r19,Z+29
	ldd r20,Z+30
	ldd r21,Z+31
	std Y+29,r18
	std Y+30,r19
	std Y+31,r20
	std Y+32,r21
	ldd r18,Z+32
	ldd r19,Z+33
	ldd r20,Z+34
	ldd r21,Z+35
	std Y+33,r18
	std Y+34,r19
	std Y+35,r20
	std Y+36,r21
	ldd r18,Z+36
	ldd r19,Z+37
	ldd r20,Z+38
	ldd r21,Z+39
	std Y+37,r18
	std Y+38,r19
	std Y+39,r20
	std Y+40,r21
	ldd r18,Z+40
	ldd r19,Z+41
	ldd r20,Z+42
	ldd r21,Z+43
	std Y+41,r18
	std Y+42,r19
	std Y+43,r20
	std Y+44,r21
	ldd r18,Z+44
	ldd r19,Z+45
	ldd r20,Z+46
	ldd r21,Z+47
	std Y+45,r18
	std Y+46,r19
	std Y+47,r20
	std Y+48,r21
	ld r18,X+
	ld r19,X+
	ld r20,X+
	ld r21,X+
	ld r22,X+
	ld r23,X+
	ld r2,X+
	ld r3,X+
	ld r4,X+
	ld r5,X+
	ld r6,X+
	ld r7,X+
	ld r8,X+
	ld r9,X+
	ld r10,X+
	ld r11,X+
	ldi r30,lo8(table_0)
	ldi r31,hi8(table_0)
#if defined(RAMPZ)
	ldi r26,hh8(table_0)
	in r0,_SFR_IO_ADDR(RAMPZ)
	push r0
	out _SFR_IO_ADDR(RAMPZ),r26
#endif
	mov r26,r1
114:
	mov r30,r18
#if defined(RAMPZ)
	elpm r18,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r18,Z
#elif defined(__AVR_TINY__)
	ld r18,Z
#else
	lpm
	mov r18,r0
#endif
	mov r30,r19
#if defined(RAMPZ)
	elpm r19,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r19,Z
#elif defined(__AVR_TINY__)
	ld r19,Z
#else
	lpm
	mov r19,r0
#endif
	mov r30,r20
#if defined(RAMPZ)
	elpm r20,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r20,Z
#elif defined(__AVR_TINY__)
	ld r20,Z
#else
	lpm
	mov r20,r0
#endif
	mov r30,r21
#if defined(RAMPZ)
	elpm r21,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r21,Z
#elif defined(__AVR_TINY__)
	ld r21,Z
#else
	lpm
	mov r21,r0
#endif
	mov r30,r22
#if defined(RAMPZ)
	elpm r22,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r22,Z
#elif defined(__AVR_TINY__)
	ld r22,Z
#else
	lpm
	mov r22,r0
#endif
	mov r30,r23
#if defined(RAMPZ)
	elpm r23,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r23,Z
#elif defined(__AVR_TINY__)
	ld r23,Z
#else
	lpm
	mov r23,r0
#endif
	mov r30,r2
#if defined(RAMPZ)
	elpm r2,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r2,Z
#elif defined(__AVR_TINY__)
	ld r2,Z
#else
	lpm
	mov r2,r0
#endif
	mov r30,r3
#if defined(RAMPZ)
	elpm r3,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r3,Z
#elif defined(__AVR_TINY__)
	ld r3,Z
#else
	lpm
	mov r3,r0
#endif
	mov r30,r4
#if defined(RAMPZ)
	elpm r4,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r4,Z
#elif defined(__AVR_TINY__)
	ld r4,Z
#else
	lpm
	mov r4,r0
#endif
	mov r30,r5
#if defined(RAMPZ)
	elpm r5,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r5,Z
#elif defined(__AVR_TINY__)
	ld r5,Z
#else
	lpm
	mov r5,r0
#endif
	mov r30,r6
#if defined(RAMPZ)
	elpm r6,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r6,Z
#elif defined(__AVR_TINY__)
	ld r6,Z
#else
	lpm
	mov r6,r0
#endif
	mov r30,r7
#if defined(RAMPZ)
	elpm r7,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r7,Z
#elif defined(__AVR_TINY__)
	ld r7,Z
#else
	lpm
	mov r7,r0
#endif
	mov r30,r8
#if defined(RAMPZ)
	elpm r8,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r8,Z
#elif defined(__AVR_TINY__)
	ld r8,Z
#else
	lpm
	mov r8,r0
#endif
	mov r30,r9
#if defined(RAMPZ)
	elpm r9,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r9,Z
#elif defined(__AVR_TINY__)
	ld r9,Z
#else
	lpm
	mov r9,r0
#endif
	mov r30,r10
#if defined(RAMPZ)
	elpm r10,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r10,Z
#elif defined(__AVR_TINY__)
	ld r10,Z
#else
	lpm
	mov r10,r0
#endif
	mov r30,r11
#if defined(RAMPZ)
	elpm r11,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r11,Z
#elif defined(__AVR_TINY__)
	ld r11,Z
#else
	lpm
	mov r11,r0
#endif
	ldi r30,lo8(table_4)
	ldi r31,hi8(table_4)
#if defined(RAMPZ)
	ldi r24,hh8(table_4)
	out _SFR_IO_ADDR(RAMPZ),r24
#endif
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r18,r27
	inc r26
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r22,r27
	inc r26
	ldi r27,2
	eor r4,r27
	ldd r0,Y+1
	eor r18,r0
	ldd r0,Y+2
	eor r19,r0
	ldd r0,Y+3
	eor r20,r0
	ldd r0,Y+4
	eor r21,r0
	ldd r0,Y+17
	eor r18,r0
	ldd r0,Y+18
	eor r19,r0
	ldd r0,Y+19
	eor r20,r0
	ldd r0,Y+20
	eor r21,r0
	ldd r0,Y+33
	eor r18,r0
	ldd r0,Y+34
	eor r19,r0
	ldd r0,Y+35
	eor r20,r0
	ldd r0,Y+36
	eor r21,r0
	ldd r0,Y+5
	eor r22,r0
	ldd r0,Y+6
	eor r23,r0
	ldd r0,Y+7
	eor r2,r0
	ldd r0,Y+8
	eor r3,r0
	ldd r0,Y+21
	eor r22,r0
	ldd r0,Y+22
	eor r23,r0
	ldd r0,Y+23
	eor r2,r0
	ldd r0,Y+24
	eor r3,r0
	ldd r0,Y+37
	eor r22,r0
	ldd r0,Y+38
	eor r23,r0
	ldd r0,Y+39
	eor r2,r0
	ldd r0,Y+40
	eor r3,r0
	mov r0,r3
	mov r3,r2
	mov r2,r23
	mov r23,r22
	mov r22,r0
	mov r0,r6
	mov r6,r4
	mov r4,r0
	mov r0,r7
	mov r7,r5
	mov r5,r0
	mov r0,r8
	mov r8,r9
	mov r9,r10
	mov r10,r11
	mov r11,r0
	eor r22,r4
	eor r23,r5
	eor r2,r6
	eor r3,r7
	eor r4,r18
	eor r5,r19
	eor r6,r20
	eor r7,r21
	eor r8,r4
	eor r9,r5
	eor r10,r6
	eor r11,r7
	ldd r12,Y+9
	ldd r13,Y+10
	ldd r14,Y+11
	ldd r15,Y+12
	ldd r24,Y+13
	ldd r25,Y+14
	ldd r16,Y+15
	ldd r17,Y+16
	std Y+9,r13
	std Y+10,r17
	std Y+11,r12
	std Y+12,r25
	std Y+13,r14
	std Y+14,r16
	std Y+15,r24
	std Y+16,r15
	ldi r30,lo8(table_2)
	ldi r31,hi8(table_2)
#if defined(RAMPZ)
	ldi r27,hh8(table_2)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	ldd r12,Y+25
	ldd r13,Y+26
	ldd r14,Y+27
	ldd r15,Y+28
	ldd r24,Y+29
	ldd r25,Y+30
	ldd r16,Y+31
	ldd r17,Y+32
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+25,r13
	std Y+26,r17
	std Y+27,r12
	std Y+28,r25
	std Y+29,r14
	std Y+30,r16
	std Y+31,r24
	std Y+32,r15
	ldi r30,lo8(table_3)
	ldi r31,hi8(table_3)
#if defined(RAMPZ)
	ldi r27,hh8(table_3)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	ldd r12,Y+41
	ldd r13,Y+42
	ldd r14,Y+43
	ldd r15,Y+44
	ldd r24,Y+45
	ldd r25,Y+46
	ldd r16,Y+47
	ldd r17,Y+48
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+41,r13
	std Y+42,r17
	std Y+43,r12
	std Y+44,r25
	std Y+45,r14
	std Y+46,r16
	std Y+47,r24
	std Y+48,r15
	ldi r30,lo8(table_0)
	ldi r31,hi8(table_0)
#if defined(RAMPZ)
	ldi r27,hh8(table_0)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	mov r30,r8
#if defined(RAMPZ)
	elpm r8,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r8,Z
#elif defined(__AVR_TINY__)
	ld r8,Z
#else
	lpm
	mov r8,r0
#endif
	mov r30,r9
#if defined(RAMPZ)
	elpm r9,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r9,Z
#elif defined(__AVR_TINY__)
	ld r9,Z
#else
	lpm
	mov r9,r0
#endif
	mov r30,r10
#if defined(RAMPZ)
	elpm r10,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r10,Z
#elif defined(__AVR_TINY__)
	ld r10,Z
#else
	lpm
	mov r10,r0
#endif
	mov r30,r11
#if defined(RAMPZ)
	elpm r11,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r11,Z
#elif defined(__AVR_TINY__)
	ld r11,Z
#else
	lpm
	mov r11,r0
#endif
	mov r30,r18
#if defined(RAMPZ)
	elpm r18,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r18,Z
#elif defined(__AVR_TINY__)
	ld r18,Z
#else
	lpm
	mov r18,r0
#endif
	mov r30,r19
#if defined(RAMPZ)
	elpm r19,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r19,Z
#elif defined(__AVR_TINY__)
	ld r19,Z
#else
	lpm
	mov r19,r0
#endif
	mov r30,r20
#if defined(RAMPZ)
	elpm r20,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r20,Z
#elif defined(__AVR_TINY__)
	ld r20,Z
#else
	lpm
	mov r20,r0
#endif
	mov r30,r21
#if defined(RAMPZ)
	elpm r21,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r21,Z
#elif defined(__AVR_TINY__)
	ld r21,Z
#else
	lpm
	mov r21,r0
#endif
	mov r30,r22
#if defined(RAMPZ)
	elpm r22,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r22,Z
#elif defined(__AVR_TINY__)
	ld r22,Z
#else
	lpm
	mov r22,r0
#endif
	mov r30,r23
#if defined(RAMPZ)
	elpm r23,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r23,Z
#elif defined(__AVR_TINY__)
	ld r23,Z
#else
	lpm
	mov r23,r0
#endif
	mov r30,r2
#if defined(RAMPZ)
	elpm r2,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r2,Z
#elif defined(__AVR_TINY__)
	ld r2,Z
#else
	lpm
	mov r2,r0
#endif
	mov r30,r3
#if defined(RAMPZ)
	elpm r3,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r3,Z
#elif defined(__AVR_TINY__)
	ld r3,Z
#else
	lpm
	mov r3,r0
#endif
	mov r30,r4
#if defined(RAMPZ)
	elpm r4,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r4,Z
#elif defined(__AVR_TINY__)
	ld r4,Z
#else
	lpm
	mov r4,r0
#endif
	mov r30,r5
#if defined(RAMPZ)
	elpm r5,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r5,Z
#elif defined(__AVR_TINY__)
	ld r5,Z
#else
	lpm
	mov r5,r0
#endif
	mov r30,r6
#if defined(RAMPZ)
	elpm r6,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r6,Z
#elif defined(__AVR_TINY__)
	ld r6,Z
#else
	lpm
	mov r6,r0
#endif
	mov r30,r7
#if defined(RAMPZ)
	elpm r7,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r7,Z
#elif defined(__AVR_TINY__)
	ld r7,Z
#else
	lpm
	mov r7,r0
#endif
	ldi r30,lo8(table_4)
	ldi r31,hi8(table_4)
#if defined(RAMPZ)
	ldi r24,hh8(table_4)
	out _SFR_IO_ADDR(RAMPZ),r24
#endif
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r8,r27
	inc r26
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r18,r27
	inc r26
	ldi r27,2
	eor r22,r27
	ldd r0,Y+9
	eor r8,r0
	ldd r0,Y+10
	eor r9,r0
	ldd r0,Y+11
	eor r10,r0
	ldd r0,Y+12
	eor r11,r0
	ldd r0,Y+25
	eor r8,r0
	ldd r0,Y+26
	eor r9,r0
	ldd r0,Y+27
	eor r10,r0
	ldd r0,Y+28
	eor r11,r0
	ldd r0,Y+41
	eor r8,r0
	ldd r0,Y+42
	eor r9,r0
	ldd r0,Y+43
	eor r10,r0
	ldd r0,Y+44
	eor r11,r0
	ldd r0,Y+13
	eor r18,r0
	ldd r0,Y+14
	eor r19,r0
	ldd r0,Y+15
	eor r20,r0
	ldd r0,Y+16
	eor r21,r0
	ldd r0,Y+29
	eor r18,r0
	ldd r0,Y+30
	eor r19,r0
	ldd r0,Y+31
	eor r20,r0
	ldd r0,Y+32
	eor r21,r0
	ldd r0,Y+45
	eor r18,r0
	ldd r0,Y+46
	eor r19,r0
	ldd r0,Y+47
	eor r20,r0
	ldd r0,Y+48
	eor r21,r0
	mov r0,r21
	mov r21,r20
	mov r20,r19
	mov r19,r18
	mov r18,r0
	mov r0,r2
	mov r2,r22
	mov r22,r0
	mov r0,r3
	mov r3,r23
	mov r23,r0
	mov r0,r4
	mov r4,r5
	mov r5,r6
	mov r6,r7
	mov r7,r0
	eor r18,r22
	eor r19,r23
	eor r20,r2
	eor r21,r3
	eor r22,r8
	eor r23,r9
	eor r2,r10
	eor r3,r11
	eor r4,r22
	eor r5,r23
	eor r6,r2
	eor r7,r3
	ldd r12,Y+1
	ldd r13,Y+2
	ldd r14,Y+3
	ldd r15,Y+4
	ldd r24,Y+5
	ldd r25,Y+6
	ldd r16,Y+7
	ldd r17,Y+8
	std Y+1,r13
	std Y+2,r17
	std Y+3,r12
	std Y+4,r25
	std Y+5,r14
	std Y+6,r16
	std Y+7,r24
	std Y+8,r15
	ldi r30,lo8(table_2)
	ldi r31,hi8(table_2)
#if defined(RAMPZ)
	ldi r27,hh8(table_2)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	ldd r12,Y+17
	ldd r13,Y+18
	ldd r14,Y+19
	ldd r15,Y+20
	ldd r24,Y+21
	ldd r25,Y+22
	ldd r16,Y+23
	ldd r17,Y+24
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+17,r13
	std Y+18,r17
	std Y+19,r12
	std Y+20,r25
	std Y+21,r14
	std Y+22,r16
	std Y+23,r24
	std Y+24,r15
	ldi r30,lo8(table_3)
	ldi r31,hi8(table_3)
#if defined(RAMPZ)
	ldi r27,hh8(table_3)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	ldd r12,Y+33
	ldd r13,Y+34
	ldd r14,Y+35
	ldd r15,Y+36
	ldd r24,Y+37
	ldd r25,Y+38
	ldd r16,Y+39
	ldd r17,Y+40
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+33,r13
	std Y+34,r17
	std Y+35,r12
	std Y+36,r25
	std Y+37,r14
	std Y+38,r16
	std Y+39,r24
	std Y+40,r15
	ldi r30,lo8(table_0)
	ldi r31,hi8(table_0)
#if defined(RAMPZ)
	ldi r27,hh8(table_0)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	mov r30,r4
#if defined(RAMPZ)
	elpm r4,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r4,Z
#elif defined(__AVR_TINY__)
	ld r4,Z
#else
	lpm
	mov r4,r0
#endif
	mov r30,r5
#if defined(RAMPZ)
	elpm r5,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r5,Z
#elif defined(__AVR_TINY__)
	ld r5,Z
#else
	lpm
	mov r5,r0
#endif
	mov r30,r6
#if defined(RAMPZ)
	elpm r6,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r6,Z
#elif defined(__AVR_TINY__)
	ld r6,Z
#else
	lpm
	mov r6,r0
#endif
	mov r30,r7
#if defined(RAMPZ)
	elpm r7,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r7,Z
#elif defined(__AVR_TINY__)
	ld r7,Z
#else
	lpm
	mov r7,r0
#endif
	mov r30,r8
#if defined(RAMPZ)
	elpm r8,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r8,Z
#elif defined(__AVR_TINY__)
	ld r8,Z
#else
	lpm
	mov r8,r0
#endif
	mov r30,r9
#if defined(RAMPZ)
	elpm r9,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r9,Z
#elif defined(__AVR_TINY__)
	ld r9,Z
#else
	lpm
	mov r9,r0
#endif
	mov r30,r10
#if defined(RAMPZ)
	elpm r10,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r10,Z
#elif defined(__AVR_TINY__)
	ld r10,Z
#else
	lpm
	mov r10,r0
#endif
	mov r30,r11
#if defined(RAMPZ)
	elpm r11,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r11,Z
#elif defined(__AVR_TINY__)
	ld r11,Z
#else
	lpm
	mov r11,r0
#endif
	mov r30,r18
#if defined(RAMPZ)
	elpm r18,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r18,Z
#elif defined(__AVR_TINY__)
	ld r18,Z
#else
	lpm
	mov r18,r0
#endif
	mov r30,r19
#if defined(RAMPZ)
	elpm r19,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r19,Z
#elif defined(__AVR_TINY__)
	ld r19,Z
#else
	lpm
	mov r19,r0
#endif
	mov r30,r20
#if defined(RAMPZ)
	elpm r20,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r20,Z
#elif defined(__AVR_TINY__)
	ld r20,Z
#else
	lpm
	mov r20,r0
#endif
	mov r30,r21
#if defined(RAMPZ)
	elpm r21,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r21,Z
#elif defined(__AVR_TINY__)
	ld r21,Z
#else
	lpm
	mov r21,r0
#endif
	mov r30,r22
#if defined(RAMPZ)
	elpm r22,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r22,Z
#elif defined(__AVR_TINY__)
	ld r22,Z
#else
	lpm
	mov r22,r0
#endif
	mov r30,r23
#if defined(RAMPZ)
	elpm r23,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r23,Z
#elif defined(__AVR_TINY__)
	ld r23,Z
#else
	lpm
	mov r23,r0
#endif
	mov r30,r2
#if defined(RAMPZ)
	elpm r2,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r2,Z
#elif defined(__AVR_TINY__)
	ld r2,Z
#else
	lpm
	mov r2,r0
#endif
	mov r30,r3
#if defined(RAMPZ)
	elpm r3,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r3,Z
#elif defined(__AVR_TINY__)
	ld r3,Z
#else
	lpm
	mov r3,r0
#endif
	ldi r30,lo8(table_4)
	ldi r31,hi8(table_4)
#if defined(RAMPZ)
	ldi r24,hh8(table_4)
	out _SFR_IO_ADDR(RAMPZ),r24
#endif
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r4,r27
	inc r26
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r8,r27
	inc r26
	ldi r27,2
	eor r18,r27
	ldd r0,Y+1
	eor r4,r0
	ldd r0,Y+2
	eor r5,r0
	ldd r0,Y+3
	eor r6,r0
	ldd r0,Y+4
	eor r7,r0
	ldd r0,Y+17
	eor r4,r0
	ldd r0,Y+18
	eor r5,r0
	ldd r0,Y+19
	eor r6,r0
	ldd r0,Y+20
	eor r7,r0
	ldd r0,Y+33
	eor r4,r0
	ldd r0,Y+34
	eor r5,r0
	ldd r0,Y+35
	eor r6,r0
	ldd r0,Y+36
	eor r7,r0
	ldd r0,Y+5
	eor r8,r0
	ldd r0,Y+6
	eor r9,r0
	ldd r0,Y+7
	eor r10,r0
	ldd r0,Y+8
	eor r11,r0
	ldd r0,Y+21
	eor r8,r0
	ldd r0,Y+22
	eor r9,r0
	ldd r0,Y+23
	eor r10,r0
	ldd r0,Y+24
	eor r11,r0
	ldd r0,Y+37
	eor r8,r0
	ldd r0,Y+38
	eor r9,r0
	ldd r0,Y+39
	eor r10,r0
	ldd r0,Y+40
	eor r11,r0
	mov r0,r11
	mov r11,r10
	mov r10,r9
	mov r9,r8
	mov r8,r0
	mov r0,r20
	mov r20,r18
	mov r18,r0
	mov r0,r21
	mov r21,r19
	mov r19,r0
	mov r0,r22
	mov r22,r23
	mov r23,r2
	mov r2,r3
	mov r3,r0
	eor r8,r18
	eor r9,r19
	eor r10,r20
	eor r11,r21
	eor r18,r4
	eor r19,r5
	eor r20,r6
	eor r21,r7
	eor r22,r18
	eor r23,r19
	eor r2,r20
	eor r3,r21
	ldd r12,Y+9
	ldd r13,Y+10
	ldd r14,Y+11
	ldd r15,Y+12
	ldd r24,Y+13
	ldd r25,Y+14
	ldd r16,Y+15
	ldd r17,Y+16
	std Y+9,r13
	std Y+10,r17
	std Y+11,r12
	std Y+12,r25
	std Y+13,r14
	std Y+14,r16
	std Y+15,r24
	std Y+16,r15
	ldi r30,lo8(table_2)
	ldi r31,hi8(table_2)
#if defined(RAMPZ)
	ldi r27,hh8(table_2)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	ldd r12,Y+25
	ldd r13,Y+26
	ldd r14,Y+27
	ldd r15,Y+28
	ldd r24,Y+29
	ldd r25,Y+30
	ldd r16,Y+31
	ldd r17,Y+32
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+25,r13
	std Y+26,r17
	std Y+27,r12
	std Y+28,r25
	std Y+29,r14
	std Y+30,r16
	std Y+31,r24
	std Y+32,r15
	ldi r30,lo8(table_3)
	ldi r31,hi8(table_3)
#if defined(RAMPZ)
	ldi r27,hh8(table_3)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	ldd r12,Y+41
	ldd r13,Y+42
	ldd r14,Y+43
	ldd r15,Y+44
	ldd r24,Y+45
	ldd r25,Y+46
	ldd r16,Y+47
	ldd r17,Y+48
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+41,r13
	std Y+42,r17
	std Y+43,r12
	std Y+44,r25
	std Y+45,r14
	std Y+46,r16
	std Y+47,r24
	std Y+48,r15
	ldi r30,lo8(table_0)
	ldi r31,hi8(table_0)
#if defined(RAMPZ)
	ldi r27,hh8(table_0)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	mov r30,r22
#if defined(RAMPZ)
	elpm r22,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r22,Z
#elif defined(__AVR_TINY__)
	ld r22,Z
#else
	lpm
	mov r22,r0
#endif
	mov r30,r23
#if defined(RAMPZ)
	elpm r23,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r23,Z
#elif defined(__AVR_TINY__)
	ld r23,Z
#else
	lpm
	mov r23,r0
#endif
	mov r30,r2
#if defined(RAMPZ)
	elpm r2,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r2,Z
#elif defined(__AVR_TINY__)
	ld r2,Z
#else
	lpm
	mov r2,r0
#endif
	mov r30,r3
#if defined(RAMPZ)
	elpm r3,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r3,Z
#elif defined(__AVR_TINY__)
	ld r3,Z
#else
	lpm
	mov r3,r0
#endif
	mov r30,r4
#if defined(RAMPZ)
	elpm r4,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r4,Z
#elif defined(__AVR_TINY__)
	ld r4,Z
#else
	lpm
	mov r4,r0
#endif
	mov r30,r5
#if defined(RAMPZ)
	elpm r5,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r5,Z
#elif defined(__AVR_TINY__)
	ld r5,Z
#else
	lpm
	mov r5,r0
#endif
	mov r30,r6
#if defined(RAMPZ)
	elpm r6,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r6,Z
#elif defined(__AVR_TINY__)
	ld r6,Z
#else
	lpm
	mov r6,r0
#endif
	mov r30,r7
#if defined(RAMPZ)
	elpm r7,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r7,Z
#elif defined(__AVR_TINY__)
	ld r7,Z
#else
	lpm
	mov r7,r0
#endif
	mov r30,r8
#if defined(RAMPZ)
	elpm r8,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r8,Z
#elif defined(__AVR_TINY__)
	ld r8,Z
#else
	lpm
	mov r8,r0
#endif
	mov r30,r9
#if defined(RAMPZ)
	elpm r9,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r9,Z
#elif defined(__AVR_TINY__)
	ld r9,Z
#else
	lpm
	mov r9,r0
#endif
	mov r30,r10
#if defined(RAMPZ)
	elpm r10,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r10,Z
#elif defined(__AVR_TINY__)
	ld r10,Z
#else
	lpm
	mov r10,r0
#endif
	mov r30,r11
#if defined(RAMPZ)
	elpm r11,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r11,Z
#elif defined(__AVR_TINY__)
	ld r11,Z
#else
	lpm
	mov r11,r0
#endif
	mov r30,r18
#if defined(RAMPZ)
	elpm r18,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r18,Z
#elif defined(__AVR_TINY__)
	ld r18,Z
#else
	lpm
	mov r18,r0
#endif
	mov r30,r19
#if defined(RAMPZ)
	elpm r19,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r19,Z
#elif defined(__AVR_TINY__)
	ld r19,Z
#else
	lpm
	mov r19,r0
#endif
	mov r30,r20
#if defined(RAMPZ)
	elpm r20,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r20,Z
#elif defined(__AVR_TINY__)
	ld r20,Z
#else
	lpm
	mov r20,r0
#endif
	mov r30,r21
#if defined(RAMPZ)
	elpm r21,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r21,Z
#elif defined(__AVR_TINY__)
	ld r21,Z
#else
	lpm
	mov r21,r0
#endif
	ldi r30,lo8(table_4)
	ldi r31,hi8(table_4)
#if defined(RAMPZ)
	ldi r24,hh8(table_4)
	out _SFR_IO_ADDR(RAMPZ),r24
#endif
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r22,r27
	inc r26
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r4,r27
	inc r26
	ldi r27,2
	eor r8,r27
	ldd r0,Y+9
	eor r22,r0
	ldd r0,Y+10
	eor r23,r0
	ldd r0,Y+11
	eor r2,r0
	ldd r0,Y+12
	eor r3,r0
	ldd r0,Y+25
	eor r22,r0
	ldd r0,Y+26
	eor r23,r0
	ldd r0,Y+27
	eor r2,r0
	ldd r0,Y+28
	eor r3,r0
	ldd r0,Y+41
	eor r22,r0
	ldd r0,Y+42
	eor r23,r0
	ldd r0,Y+43
	eor r2,r0
	ldd r0,Y+44
	eor r3,r0
	ldd r0,Y+13
	eor r4,r0
	ldd r0,Y+14
	eor r5,r0
	ldd r0,Y+15
	eor r6,r0
	ldd r0,Y+16
	eor r7,r0
	ldd r0,Y+29
	eor r4,r0
	ldd r0,Y+30
	eor r5,r0
	ldd r0,Y+31
	eor r6,r0
	ldd r0,Y+32
	eor r7,r0
	ldd r0,Y+45
	eor r4,r0
	ldd r0,Y+46
	eor r5,r0
	ldd r0,Y+47
	eor r6,r0
	ldd r0,Y+48
	eor r7,r0
	mov r0,r7
	mov r7,r6
	mov r6,r5
	mov r5,r4
	mov r4,r0
	mov r0,r10
	mov r10,r8
	mov r8,r0
	mov r0,r11
	mov r11,r9
	mov r9,r0
	mov r0,r18
	mov r18,r19
	mov r19,r20
	mov r20,r21
	mov r21,r0
	eor r4,r8
	eor r5,r9
	eor r6,r10
	eor r7,r11
	eor r8,r22
	eor r9,r23
	eor r10,r2
	eor r11,r3
	eor r18,r8
	eor r19,r9
	eor r20,r10
	eor r21,r11
	cpi r26,80
	brne 5721f
	rjmp 790f
5721:
	ldd r12,Y+1
	ldd r13,Y+2
	ldd r14,Y+3
	ldd r15,Y+4
	ldd r24,Y+5
	ldd r25,Y+6
	ldd r16,Y+7
	ldd r17,Y+8
	std Y+1,r13
	std Y+2,r17
	std Y+3,r12
	std Y+4,r25
	std Y+5,r14
	std Y+6,r16
	std Y+7,r24
	std Y+8,r15
	ldi r30,lo8(table_2)
	ldi r31,hi8(table_2)
#if defined(RAMPZ)
	ldi r27,hh8(table_2)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	ldd r12,Y+17
	ldd r13,Y+18
	ldd r14,Y+19
	ldd r15,Y+20
	ldd r24,Y+21
	ldd r25,Y+22
	ldd r16,Y+23
	ldd r17,Y+24
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+17,r13
	std Y+18,r17
	std Y+19,r12
	std Y+20,r25
	std Y+21,r14
	std Y+22,r16
	std Y+23,r24
	std Y+24,r15
	ldi r30,lo8(table_3)
	ldi r31,hi8(table_3)
#if defined(RAMPZ)
	ldi r27,hh8(table_3)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	ldd r12,Y+33
	ldd r13,Y+34
	ldd r14,Y+35
	ldd r15,Y+36
	ldd r24,Y+37
	ldd r25,Y+38
	ldd r16,Y+39
	ldd r17,Y+40
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+33,r13
	std Y+34,r17
	std Y+35,r12
	std Y+36,r25
	std Y+37,r14
	std Y+38,r16
	std Y+39,r24
	std Y+40,r15
	ldi r30,lo8(table_0)
	ldi r31,hi8(table_0)
#if defined(RAMPZ)
	ldi r27,hh8(table_0)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	rjmp 114b
790:
#if defined(RAMPZ)
	pop r0
	out _SFR_IO_ADDR(RAMPZ),r0
#endif
	ldd r26,Y+49
	ldd r27,Y+50
	st X+,r18
	st X+,r19
	st X+,r20
	st X+,r21
	st X+,r22
	st X+,r23
	st X+,r2
	st X+,r3
	st X+,r4
	st X+,r5
	st X+,r6
	st X+,r7
	st X+,r8
	st X+,r9
	st X+,r10
	st X+,r11
	adiw r28,50
	in r0,0x3f
	cli
	out 0x3e,r29
	out 0x3f,r0
	out 0x3d,r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	pop r29
	pop r28
	ret
	.size skinny_plus_encrypt, .-skinny_plus_encrypt

.global skinny_plus_encrypt_tk_full
	.set skinny_plus_encrypt_tk_full,skinny_plus_encrypt

	.text
.global skinny_plus_decrypt
	.type skinny_plus_decrypt, @function
skinny_plus_decrypt:
	push r28
	push r29
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r23
	push r22
	movw r30,r24
	movw r26,r20
	in r28,0x3d
	in r29,0x3e
	sbiw r28,48
	in r0,0x3f
	cli
	out 0x3e,r29
	out 0x3f,r0
	out 0x3d,r28
.L__stack_usage = 68
	ld r18,Z
	ldd r19,Z+1
	ldd r20,Z+2
	ldd r21,Z+3
	ldd r22,Z+4
	ldd r23,Z+5
	ldd r2,Z+6
	ldd r3,Z+7
	ldd r4,Z+8
	ldd r5,Z+9
	ldd r6,Z+10
	ldd r7,Z+11
	ldd r8,Z+12
	ldd r9,Z+13
	ldd r10,Z+14
	ldd r11,Z+15
	std Y+1,r23
	std Y+2,r2
	std Y+3,r21
	std Y+4,r20
	std Y+5,r3
	std Y+6,r18
	std Y+7,r19
	std Y+8,r22
	std Y+9,r9
	std Y+10,r10
	std Y+11,r7
	std Y+12,r6
	std Y+13,r11
	std Y+14,r4
	std Y+15,r5
	std Y+16,r8
	ldd r18,Z+16
	ldd r19,Z+17
	ldd r20,Z+18
	ldd r21,Z+19
	ldd r22,Z+20
	ldd r23,Z+21
	ldd r2,Z+22
	ldd r3,Z+23
	ldd r4,Z+24
	ldd r5,Z+25
	ldd r6,Z+26
	ldd r7,Z+27
	ldd r8,Z+28
	ldd r9,Z+29
	ldd r10,Z+30
	ldd r11,Z+31
	std Y+17,r23
	std Y+18,r2
	std Y+19,r21
	std Y+20,r20
	std Y+21,r3
	std Y+22,r18
	std Y+23,r19
	std Y+24,r22
	std Y+25,r9
	std Y+26,r10
	std Y+27,r7
	std Y+28,r6
	std Y+29,r11
	std Y+30,r4
	std Y+31,r5
	std Y+32,r8
	ldd r18,Z+32
	ldd r19,Z+33
	ldd r20,Z+34
	ldd r21,Z+35
	ldd r22,Z+36
	ldd r23,Z+37
	ldd r2,Z+38
	ldd r3,Z+39
	ldd r4,Z+40
	ldd r5,Z+41
	ldd r6,Z+42
	ldd r7,Z+43
	ldd r8,Z+44
	ldd r9,Z+45
	ldd r10,Z+46
	ldd r11,Z+47
	std Y+33,r23
	std Y+34,r2
	std Y+35,r21
	std Y+36,r20
	std Y+37,r3
	std Y+38,r18
	std Y+39,r19
	std Y+40,r22
	std Y+41,r9
	std Y+42,r10
	std Y+43,r7
	std Y+44,r6
	std Y+45,r11
	std Y+46,r4
	std Y+47,r5
	std Y+48,r8
	ld r18,X+
	ld r19,X+
	ld r20,X+
	ld r21,X+
	ld r22,X+
	ld r23,X+
	ld r2,X+
	ld r3,X+
	ld r4,X+
	ld r5,X+
	ld r6,X+
	ld r7,X+
	ld r8,X+
	ld r9,X+
	ld r10,X+
	ld r11,X+
	ldi r30,lo8(table_2)
	ldi r31,hi8(table_2)
#if defined(RAMPZ)
	ldi r26,hh8(table_2)
	in r0,_SFR_IO_ADDR(RAMPZ)
	push r0
	out _SFR_IO_ADDR(RAMPZ),r26
#endif
	ldi r26,20
	ldd r12,Y+17
	ldd r13,Y+18
	ldd r14,Y+19
	ldd r15,Y+20
	ldd r24,Y+21
	ldd r25,Y+22
	ldd r16,Y+23
	ldd r17,Y+24
122:
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	dec r26
	brne 122b
	std Y+17,r12
	std Y+18,r13
	std Y+19,r14
	std Y+20,r15
	std Y+21,r24
	std Y+22,r25
	std Y+23,r16
	std Y+24,r17
	ldi r26,20
	ldd r12,Y+25
	ldd r13,Y+26
	ldd r14,Y+27
	ldd r15,Y+28
	ldd r24,Y+29
	ldd r25,Y+30
	ldd r16,Y+31
	ldd r17,Y+32
150:
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	dec r26
	brne 150b
	std Y+25,r12
	std Y+26,r13
	std Y+27,r14
	std Y+28,r15
	std Y+29,r24
	std Y+30,r25
	std Y+31,r16
	std Y+32,r17
	ldi r30,lo8(table_3)
	ldi r31,hi8(table_3)
#if defined(RAMPZ)
	ldi r26,hh8(table_3)
	out _SFR_IO_ADDR(RAMPZ),r26
#endif
	ldi r26,20
	ldd r12,Y+33
	ldd r13,Y+34
	ldd r14,Y+35
	ldd r15,Y+36
	ldd r24,Y+37
	ldd r25,Y+38
	ldd r16,Y+39
	ldd r17,Y+40
179:
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	dec r26
	brne 179b
	std Y+33,r12
	std Y+34,r13
	std Y+35,r14
	std Y+36,r15
	std Y+37,r24
	std Y+38,r25
	std Y+39,r16
	std Y+40,r17
	ldi r26,20
	ldd r12,Y+41
	ldd r13,Y+42
	ldd r14,Y+43
	ldd r15,Y+44
	ldd r24,Y+45
	ldd r25,Y+46
	ldd r16,Y+47
	ldd r17,Y+48
207:
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	dec r26
	brne 207b
	std Y+41,r12
	std Y+42,r13
	std Y+43,r14
	std Y+44,r15
	std Y+45,r24
	std Y+46,r25
	std Y+47,r16
	std Y+48,r17
	ldi r26,80
227:
	ldd r12,Y+1
	ldd r13,Y+2
	ldd r14,Y+3
	ldd r15,Y+4
	ldd r24,Y+5
	ldd r25,Y+6
	ldd r16,Y+7
	ldd r17,Y+8
	std Y+1,r14
	std Y+2,r12
	std Y+3,r24
	std Y+4,r17
	std Y+5,r16
	std Y+6,r15
	std Y+7,r25
	std Y+8,r13
	ldd r12,Y+17
	ldd r13,Y+18
	ldd r14,Y+19
	ldd r15,Y+20
	ldd r24,Y+21
	ldd r25,Y+22
	ldd r16,Y+23
	ldd r17,Y+24
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+17,r14
	std Y+18,r12
	std Y+19,r24
	std Y+20,r17
	std Y+21,r16
	std Y+22,r15
	std Y+23,r25
	std Y+24,r13
	ldi r30,lo8(table_2)
	ldi r31,hi8(table_2)
#if defined(RAMPZ)
	ldi r27,hh8(table_2)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	ldd r12,Y+33
	ldd r13,Y+34
	ldd r14,Y+35
	ldd r15,Y+36
	ldd r24,Y+37
	ldd r25,Y+38
	ldd r16,Y+39
	ldd r17,Y+40
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+33,r14
	std Y+34,r12
	std Y+35,r24
	std Y+36,r17
	std Y+37,r16
	std Y+38,r15
	std Y+39,r25
	std Y+40,r13
	eor r18,r8
	eor r19,r9
	eor r20,r10
	eor r21,r11
	eor r8,r22
	eor r9,r23
	eor r10,r2
	eor r11,r3
	eor r4,r8
	eor r5,r9
	eor r6,r10
	eor r7,r11
	mov r0,r4
	mov r4,r5
	mov r5,r6
	mov r6,r7
	mov r7,r0
	mov r0,r8
	mov r8,r10
	mov r10,r0
	mov r0,r9
	mov r9,r11
	mov r11,r0
	mov r0,r21
	mov r21,r20
	mov r20,r19
	mov r19,r18
	mov r18,r0
	ldd r0,Y+9
	eor r22,r0
	ldd r0,Y+10
	eor r23,r0
	ldd r0,Y+11
	eor r2,r0
	ldd r0,Y+12
	eor r3,r0
	ldd r0,Y+25
	eor r22,r0
	ldd r0,Y+26
	eor r23,r0
	ldd r0,Y+27
	eor r2,r0
	ldd r0,Y+28
	eor r3,r0
	ldd r0,Y+41
	eor r22,r0
	ldd r0,Y+42
	eor r23,r0
	ldd r0,Y+43
	eor r2,r0
	ldd r0,Y+44
	eor r3,r0
	ldd r0,Y+13
	eor r4,r0
	ldd r0,Y+14
	eor r5,r0
	ldd r0,Y+15
	eor r6,r0
	ldd r0,Y+16
	eor r7,r0
	ldd r0,Y+29
	eor r4,r0
	ldd r0,Y+30
	eor r5,r0
	ldd r0,Y+31
	eor r6,r0
	ldd r0,Y+32
	eor r7,r0
	ldd r0,Y+45
	eor r4,r0
	ldd r0,Y+46
	eor r5,r0
	ldd r0,Y+47
	eor r6,r0
	ldd r0,Y+48
	eor r7,r0
	ldi r30,lo8(table_4)
	ldi r31,hi8(table_4)
#if defined(RAMPZ)
	ldi r24,hh8(table_4)
	out _SFR_IO_ADDR(RAMPZ),r24
#endif
	dec r26
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r4,r27
	dec r26
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r22,r27
	ldi r27,2
	eor r8,r27
	ldi r30,lo8(table_1)
	ldi r31,hi8(table_1)
#if defined(RAMPZ)
	ldi r27,hh8(table_1)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	mov r30,r22
#if defined(RAMPZ)
	elpm r22,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r22,Z
#elif defined(__AVR_TINY__)
	ld r22,Z
#else
	lpm
	mov r22,r0
#endif
	mov r30,r23
#if defined(RAMPZ)
	elpm r23,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r23,Z
#elif defined(__AVR_TINY__)
	ld r23,Z
#else
	lpm
	mov r23,r0
#endif
	mov r30,r2
#if defined(RAMPZ)
	elpm r2,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r2,Z
#elif defined(__AVR_TINY__)
	ld r2,Z
#else
	lpm
	mov r2,r0
#endif
	mov r30,r3
#if defined(RAMPZ)
	elpm r3,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r3,Z
#elif defined(__AVR_TINY__)
	ld r3,Z
#else
	lpm
	mov r3,r0
#endif
	mov r30,r4
#if defined(RAMPZ)
	elpm r4,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r4,Z
#elif defined(__AVR_TINY__)
	ld r4,Z
#else
	lpm
	mov r4,r0
#endif
	mov r30,r5
#if defined(RAMPZ)
	elpm r5,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r5,Z
#elif defined(__AVR_TINY__)
	ld r5,Z
#else
	lpm
	mov r5,r0
#endif
	mov r30,r6
#if defined(RAMPZ)
	elpm r6,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r6,Z
#elif defined(__AVR_TINY__)
	ld r6,Z
#else
	lpm
	mov r6,r0
#endif
	mov r30,r7
#if defined(RAMPZ)
	elpm r7,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r7,Z
#elif defined(__AVR_TINY__)
	ld r7,Z
#else
	lpm
	mov r7,r0
#endif
	mov r30,r8
#if defined(RAMPZ)
	elpm r8,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r8,Z
#elif defined(__AVR_TINY__)
	ld r8,Z
#else
	lpm
	mov r8,r0
#endif
	mov r30,r9
#if defined(RAMPZ)
	elpm r9,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r9,Z
#elif defined(__AVR_TINY__)
	ld r9,Z
#else
	lpm
	mov r9,r0
#endif
	mov r30,r10
#if defined(RAMPZ)
	elpm r10,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r10,Z
#elif defined(__AVR_TINY__)
	ld r10,Z
#else
	lpm
	mov r10,r0
#endif
	mov r30,r11
#if defined(RAMPZ)
	elpm r11,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r11,Z
#elif defined(__AVR_TINY__)
	ld r11,Z
#else
	lpm
	mov r11,r0
#endif
	mov r30,r18
#if defined(RAMPZ)
	elpm r18,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r18,Z
#elif defined(__AVR_TINY__)
	ld r18,Z
#else
	lpm
	mov r18,r0
#endif
	mov r30,r19
#if defined(RAMPZ)
	elpm r19,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r19,Z
#elif defined(__AVR_TINY__)
	ld r19,Z
#else
	lpm
	mov r19,r0
#endif
	mov r30,r20
#if defined(RAMPZ)
	elpm r20,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r20,Z
#elif defined(__AVR_TINY__)
	ld r20,Z
#else
	lpm
	mov r20,r0
#endif
	mov r30,r21
#if defined(RAMPZ)
	elpm r21,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r21,Z
#elif defined(__AVR_TINY__)
	ld r21,Z
#else
	lpm
	mov r21,r0
#endif
	ldi r30,lo8(table_3)
	ldi r31,hi8(table_3)
#if defined(RAMPZ)
	ldi r27,hh8(table_3)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	ldd r12,Y+9
	ldd r13,Y+10
	ldd r14,Y+11
	ldd r15,Y+12
	ldd r24,Y+13
	ldd r25,Y+14
	ldd r16,Y+15
	ldd r17,Y+16
	std Y+9,r14
	std Y+10,r12
	std Y+11,r24
	std Y+12,r17
	std Y+13,r16
	std Y+14,r15
	std Y+15,r25
	std Y+16,r13
	ldd r12,Y+25
	ldd r13,Y+26
	ldd r14,Y+27
	ldd r15,Y+28
	ldd r24,Y+29
	ldd r25,Y+30
	ldd r16,Y+31
	ldd r17,Y+32
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+25,r14
	std Y+26,r12
	std Y+27,r24
	std Y+28,r17
	std Y+29,r16
	std Y+30,r15
	std Y+31,r25
	std Y+32,r13
	ldi r30,lo8(table_2)
	ldi r31,hi8(table_2)
#if defined(RAMPZ)
	ldi r27,hh8(table_2)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	ldd r12,Y+41
	ldd r13,Y+42
	ldd r14,Y+43
	ldd r15,Y+44
	ldd r24,Y+45
	ldd r25,Y+46
	ldd r16,Y+47
	ldd r17,Y+48
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+41,r14
	std Y+42,r12
	std Y+43,r24
	std Y+44,r17
	std Y+45,r16
	std Y+46,r15
	std Y+47,r25
	std Y+48,r13
	eor r22,r18
	eor r23,r19
	eor r2,r20
	eor r3,r21
	eor r18,r4
	eor r19,r5
	eor r20,r6
	eor r21,r7
	eor r8,r18
	eor r9,r19
	eor r10,r20
	eor r11,r21
	mov r0,r8
	mov r8,r9
	mov r9,r10
	mov r10,r11
	mov r11,r0
	mov r0,r18
	mov r18,r20
	mov r20,r0
	mov r0,r19
	mov r19,r21
	mov r21,r0
	mov r0,r3
	mov r3,r2
	mov r2,r23
	mov r23,r22
	mov r22,r0
	ldd r0,Y+1
	eor r4,r0
	ldd r0,Y+2
	eor r5,r0
	ldd r0,Y+3
	eor r6,r0
	ldd r0,Y+4
	eor r7,r0
	ldd r0,Y+17
	eor r4,r0
	ldd r0,Y+18
	eor r5,r0
	ldd r0,Y+19
	eor r6,r0
	ldd r0,Y+20
	eor r7,r0
	ldd r0,Y+33
	eor r4,r0
	ldd r0,Y+34
	eor r5,r0
	ldd r0,Y+35
	eor r6,r0
	ldd r0,Y+36
	eor r7,r0
	ldd r0,Y+5
	eor r8,r0
	ldd r0,Y+6
	eor r9,r0
	ldd r0,Y+7
	eor r10,r0
	ldd r0,Y+8
	eor r11,r0
	ldd r0,Y+21
	eor r8,r0
	ldd r0,Y+22
	eor r9,r0
	ldd r0,Y+23
	eor r10,r0
	ldd r0,Y+24
	eor r11,r0
	ldd r0,Y+37
	eor r8,r0
	ldd r0,Y+38
	eor r9,r0
	ldd r0,Y+39
	eor r10,r0
	ldd r0,Y+40
	eor r11,r0
	ldi r30,lo8(table_4)
	ldi r31,hi8(table_4)
#if defined(RAMPZ)
	ldi r24,hh8(table_4)
	out _SFR_IO_ADDR(RAMPZ),r24
#endif
	dec r26
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r8,r27
	dec r26
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r4,r27
	ldi r27,2
	eor r18,r27
	ldi r30,lo8(table_1)
	ldi r31,hi8(table_1)
#if defined(RAMPZ)
	ldi r27,hh8(table_1)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	mov r30,r4
#if defined(RAMPZ)
	elpm r4,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r4,Z
#elif defined(__AVR_TINY__)
	ld r4,Z
#else
	lpm
	mov r4,r0
#endif
	mov r30,r5
#if defined(RAMPZ)
	elpm r5,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r5,Z
#elif defined(__AVR_TINY__)
	ld r5,Z
#else
	lpm
	mov r5,r0
#endif
	mov r30,r6
#if defined(RAMPZ)
	elpm r6,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r6,Z
#elif defined(__AVR_TINY__)
	ld r6,Z
#else
	lpm
	mov r6,r0
#endif
	mov r30,r7
#if defined(RAMPZ)
	elpm r7,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r7,Z
#elif defined(__AVR_TINY__)
	ld r7,Z
#else
	lpm
	mov r7,r0
#endif
	mov r30,r8
#if defined(RAMPZ)
	elpm r8,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r8,Z
#elif defined(__AVR_TINY__)
	ld r8,Z
#else
	lpm
	mov r8,r0
#endif
	mov r30,r9
#if defined(RAMPZ)
	elpm r9,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r9,Z
#elif defined(__AVR_TINY__)
	ld r9,Z
#else
	lpm
	mov r9,r0
#endif
	mov r30,r10
#if defined(RAMPZ)
	elpm r10,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r10,Z
#elif defined(__AVR_TINY__)
	ld r10,Z
#else
	lpm
	mov r10,r0
#endif
	mov r30,r11
#if defined(RAMPZ)
	elpm r11,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r11,Z
#elif defined(__AVR_TINY__)
	ld r11,Z
#else
	lpm
	mov r11,r0
#endif
	mov r30,r18
#if defined(RAMPZ)
	elpm r18,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r18,Z
#elif defined(__AVR_TINY__)
	ld r18,Z
#else
	lpm
	mov r18,r0
#endif
	mov r30,r19
#if defined(RAMPZ)
	elpm r19,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r19,Z
#elif defined(__AVR_TINY__)
	ld r19,Z
#else
	lpm
	mov r19,r0
#endif
	mov r30,r20
#if defined(RAMPZ)
	elpm r20,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r20,Z
#elif defined(__AVR_TINY__)
	ld r20,Z
#else
	lpm
	mov r20,r0
#endif
	mov r30,r21
#if defined(RAMPZ)
	elpm r21,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r21,Z
#elif defined(__AVR_TINY__)
	ld r21,Z
#else
	lpm
	mov r21,r0
#endif
	mov r30,r22
#if defined(RAMPZ)
	elpm r22,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r22,Z
#elif defined(__AVR_TINY__)
	ld r22,Z
#else
	lpm
	mov r22,r0
#endif
	mov r30,r23
#if defined(RAMPZ)
	elpm r23,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r23,Z
#elif defined(__AVR_TINY__)
	ld r23,Z
#else
	lpm
	mov r23,r0
#endif
	mov r30,r2
#if defined(RAMPZ)
	elpm r2,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r2,Z
#elif defined(__AVR_TINY__)
	ld r2,Z
#else
	lpm
	mov r2,r0
#endif
	mov r30,r3
#if defined(RAMPZ)
	elpm r3,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r3,Z
#elif defined(__AVR_TINY__)
	ld r3,Z
#else
	lpm
	mov r3,r0
#endif
	ldi r30,lo8(table_3)
	ldi r31,hi8(table_3)
#if defined(RAMPZ)
	ldi r27,hh8(table_3)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	ldd r12,Y+1
	ldd r13,Y+2
	ldd r14,Y+3
	ldd r15,Y+4
	ldd r24,Y+5
	ldd r25,Y+6
	ldd r16,Y+7
	ldd r17,Y+8
	std Y+1,r14
	std Y+2,r12
	std Y+3,r24
	std Y+4,r17
	std Y+5,r16
	std Y+6,r15
	std Y+7,r25
	std Y+8,r13
	ldd r12,Y+17
	ldd r13,Y+18
	ldd r14,Y+19
	ldd r15,Y+20
	ldd r24,Y+21
	ldd r25,Y+22
	ldd r16,Y+23
	ldd r17,Y+24
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+17,r14
	std Y+18,r12
	std Y+19,r24
	std Y+20,r17
	std Y+21,r16
	std Y+22,r15
	std Y+23,r25
	std Y+24,r13
	ldi r30,lo8(table_2)
	ldi r31,hi8(table_2)
#if defined(RAMPZ)
	ldi r27,hh8(table_2)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	ldd r12,Y+33
	ldd r13,Y+34
	ldd r14,Y+35
	ldd r15,Y+36
	ldd r24,Y+37
	ldd r25,Y+38
	ldd r16,Y+39
	ldd r17,Y+40
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+33,r14
	std Y+34,r12
	std Y+35,r24
	std Y+36,r17
	std Y+37,r16
	std Y+38,r15
	std Y+39,r25
	std Y+40,r13
	eor r4,r22
	eor r5,r23
	eor r6,r2
	eor r7,r3
	eor r22,r8
	eor r23,r9
	eor r2,r10
	eor r3,r11
	eor r18,r22
	eor r19,r23
	eor r20,r2
	eor r21,r3
	mov r0,r18
	mov r18,r19
	mov r19,r20
	mov r20,r21
	mov r21,r0
	mov r0,r22
	mov r22,r2
	mov r2,r0
	mov r0,r23
	mov r23,r3
	mov r3,r0
	mov r0,r7
	mov r7,r6
	mov r6,r5
	mov r5,r4
	mov r4,r0
	ldd r0,Y+9
	eor r8,r0
	ldd r0,Y+10
	eor r9,r0
	ldd r0,Y+11
	eor r10,r0
	ldd r0,Y+12
	eor r11,r0
	ldd r0,Y+25
	eor r8,r0
	ldd r0,Y+26
	eor r9,r0
	ldd r0,Y+27
	eor r10,r0
	ldd r0,Y+28
	eor r11,r0
	ldd r0,Y+41
	eor r8,r0
	ldd r0,Y+42
	eor r9,r0
	ldd r0,Y+43
	eor r10,r0
	ldd r0,Y+44
	eor r11,r0
	ldd r0,Y+13
	eor r18,r0
	ldd r0,Y+14
	eor r19,r0
	ldd r0,Y+15
	eor r20,r0
	ldd r0,Y+16
	eor r21,r0
	ldd r0,Y+29
	eor r18,r0
	ldd r0,Y+30
	eor r19,r0
	ldd r0,Y+31
	eor r20,r0
	ldd r0,Y+32
	eor r21,r0
	ldd r0,Y+45
	eor r18,r0
	ldd r0,Y+46
	eor r19,r0
	ldd r0,Y+47
	eor r20,r0
	ldd r0,Y+48
	eor r21,r0
	ldi r30,lo8(table_4)
	ldi r31,hi8(table_4)
#if defined(RAMPZ)
	ldi r24,hh8(table_4)
	out _SFR_IO_ADDR(RAMPZ),r24
#endif
	dec r26
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r18,r27
	dec r26
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r8,r27
	ldi r27,2
	eor r22,r27
	ldi r30,lo8(table_1)
	ldi r31,hi8(table_1)
#if defined(RAMPZ)
	ldi r27,hh8(table_1)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	mov r30,r8
#if defined(RAMPZ)
	elpm r8,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r8,Z
#elif defined(__AVR_TINY__)
	ld r8,Z
#else
	lpm
	mov r8,r0
#endif
	mov r30,r9
#if defined(RAMPZ)
	elpm r9,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r9,Z
#elif defined(__AVR_TINY__)
	ld r9,Z
#else
	lpm
	mov r9,r0
#endif
	mov r30,r10
#if defined(RAMPZ)
	elpm r10,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r10,Z
#elif defined(__AVR_TINY__)
	ld r10,Z
#else
	lpm
	mov r10,r0
#endif
	mov r30,r11
#if defined(RAMPZ)
	elpm r11,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r11,Z
#elif defined(__AVR_TINY__)
	ld r11,Z
#else
	lpm
	mov r11,r0
#endif
	mov r30,r18
#if defined(RAMPZ)
	elpm r18,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r18,Z
#elif defined(__AVR_TINY__)
	ld r18,Z
#else
	lpm
	mov r18,r0
#endif
	mov r30,r19
#if defined(RAMPZ)
	elpm r19,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r19,Z
#elif defined(__AVR_TINY__)
	ld r19,Z
#else
	lpm
	mov r19,r0
#endif
	mov r30,r20
#if defined(RAMPZ)
	elpm r20,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r20,Z
#elif defined(__AVR_TINY__)
	ld r20,Z
#else
	lpm
	mov r20,r0
#endif
	mov r30,r21
#if defined(RAMPZ)
	elpm r21,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r21,Z
#elif defined(__AVR_TINY__)
	ld r21,Z
#else
	lpm
	mov r21,r0
#endif
	mov r30,r22
#if defined(RAMPZ)
	elpm r22,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r22,Z
#elif defined(__AVR_TINY__)
	ld r22,Z
#else
	lpm
	mov r22,r0
#endif
	mov r30,r23
#if defined(RAMPZ)
	elpm r23,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r23,Z
#elif defined(__AVR_TINY__)
	ld r23,Z
#else
	lpm
	mov r23,r0
#endif
	mov r30,r2
#if defined(RAMPZ)
	elpm r2,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r2,Z
#elif defined(__AVR_TINY__)
	ld r2,Z
#else
	lpm
	mov r2,r0
#endif
	mov r30,r3
#if defined(RAMPZ)
	elpm r3,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r3,Z
#elif defined(__AVR_TINY__)
	ld r3,Z
#else
	lpm
	mov r3,r0
#endif
	mov r30,r4
#if defined(RAMPZ)
	elpm r4,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r4,Z
#elif defined(__AVR_TINY__)
	ld r4,Z
#else
	lpm
	mov r4,r0
#endif
	mov r30,r5
#if defined(RAMPZ)
	elpm r5,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r5,Z
#elif defined(__AVR_TINY__)
	ld r5,Z
#else
	lpm
	mov r5,r0
#endif
	mov r30,r6
#if defined(RAMPZ)
	elpm r6,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r6,Z
#elif defined(__AVR_TINY__)
	ld r6,Z
#else
	lpm
	mov r6,r0
#endif
	mov r30,r7
#if defined(RAMPZ)
	elpm r7,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r7,Z
#elif defined(__AVR_TINY__)
	ld r7,Z
#else
	lpm
	mov r7,r0
#endif
	ldi r30,lo8(table_3)
	ldi r31,hi8(table_3)
#if defined(RAMPZ)
	ldi r27,hh8(table_3)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	ldd r12,Y+9
	ldd r13,Y+10
	ldd r14,Y+11
	ldd r15,Y+12
	ldd r24,Y+13
	ldd r25,Y+14
	ldd r16,Y+15
	ldd r17,Y+16
	std Y+9,r14
	std Y+10,r12
	std Y+11,r24
	std Y+12,r17
	std Y+13,r16
	std Y+14,r15
	std Y+15,r25
	std Y+16,r13
	ldd r12,Y+25
	ldd r13,Y+26
	ldd r14,Y+27
	ldd r15,Y+28
	ldd r24,Y+29
	ldd r25,Y+30
	ldd r16,Y+31
	ldd r17,Y+32
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+25,r14
	std Y+26,r12
	std Y+27,r24
	std Y+28,r17
	std Y+29,r16
	std Y+30,r15
	std Y+31,r25
	std Y+32,r13
	ldi r30,lo8(table_2)
	ldi r31,hi8(table_2)
#if defined(RAMPZ)
	ldi r27,hh8(table_2)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	ldd r12,Y+41
	ldd r13,Y+42
	ldd r14,Y+43
	ldd r15,Y+44
	ldd r24,Y+45
	ldd r25,Y+46
	ldd r16,Y+47
	ldd r17,Y+48
	mov r30,r12
#if defined(RAMPZ)
	elpm r12,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r12,Z
#elif defined(__AVR_TINY__)
	ld r12,Z
#else
	lpm
	mov r12,r0
#endif
	mov r30,r13
#if defined(RAMPZ)
	elpm r13,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r13,Z
#elif defined(__AVR_TINY__)
	ld r13,Z
#else
	lpm
	mov r13,r0
#endif
	mov r30,r14
#if defined(RAMPZ)
	elpm r14,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r14,Z
#elif defined(__AVR_TINY__)
	ld r14,Z
#else
	lpm
	mov r14,r0
#endif
	mov r30,r15
#if defined(RAMPZ)
	elpm r15,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r15,Z
#elif defined(__AVR_TINY__)
	ld r15,Z
#else
	lpm
	mov r15,r0
#endif
	mov r30,r24
#if defined(RAMPZ)
	elpm r24,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r24,Z
#elif defined(__AVR_TINY__)
	ld r24,Z
#else
	lpm
	mov r24,r0
#endif
	mov r30,r25
#if defined(RAMPZ)
	elpm r25,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r25,Z
#elif defined(__AVR_TINY__)
	ld r25,Z
#else
	lpm
	mov r25,r0
#endif
	mov r30,r16
#if defined(RAMPZ)
	elpm r16,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r16,Z
#elif defined(__AVR_TINY__)
	ld r16,Z
#else
	lpm
	mov r16,r0
#endif
	mov r30,r17
#if defined(RAMPZ)
	elpm r17,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r17,Z
#elif defined(__AVR_TINY__)
	ld r17,Z
#else
	lpm
	mov r17,r0
#endif
	std Y+41,r14
	std Y+42,r12
	std Y+43,r24
	std Y+44,r17
	std Y+45,r16
	std Y+46,r15
	std Y+47,r25
	std Y+48,r13
	eor r8,r4
	eor r9,r5
	eor r10,r6
	eor r11,r7
	eor r4,r18
	eor r5,r19
	eor r6,r20
	eor r7,r21
	eor r22,r4
	eor r23,r5
	eor r2,r6
	eor r3,r7
	mov r0,r22
	mov r22,r23
	mov r23,r2
	mov r2,r3
	mov r3,r0
	mov r0,r4
	mov r4,r6
	mov r6,r0
	mov r0,r5
	mov r5,r7
	mov r7,r0
	mov r0,r11
	mov r11,r10
	mov r10,r9
	mov r9,r8
	mov r8,r0
	ldd r0,Y+1
	eor r18,r0
	ldd r0,Y+2
	eor r19,r0
	ldd r0,Y+3
	eor r20,r0
	ldd r0,Y+4
	eor r21,r0
	ldd r0,Y+17
	eor r18,r0
	ldd r0,Y+18
	eor r19,r0
	ldd r0,Y+19
	eor r20,r0
	ldd r0,Y+20
	eor r21,r0
	ldd r0,Y+33
	eor r18,r0
	ldd r0,Y+34
	eor r19,r0
	ldd r0,Y+35
	eor r20,r0
	ldd r0,Y+36
	eor r21,r0
	ldd r0,Y+5
	eor r22,r0
	ldd r0,Y+6
	eor r23,r0
	ldd r0,Y+7
	eor r2,r0
	ldd r0,Y+8
	eor r3,r0
	ldd r0,Y+21
	eor r22,r0
	ldd r0,Y+22
	eor r23,r0
	ldd r0,Y+23
	eor r2,r0
	ldd r0,Y+24
	eor r3,r0
	ldd r0,Y+37
	eor r22,r0
	ldd r0,Y+38
	eor r23,r0
	ldd r0,Y+39
	eor r2,r0
	ldd r0,Y+40
	eor r3,r0
	ldi r30,lo8(table_4)
	ldi r31,hi8(table_4)
#if defined(RAMPZ)
	ldi r24,hh8(table_4)
	out _SFR_IO_ADDR(RAMPZ),r24
#endif
	dec r26
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r22,r27
	dec r26
	mov r30,r26
#if defined(RAMPZ)
	elpm r27,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r27,Z
#elif defined(__AVR_TINY__)
	ld r27,Z
#else
	lpm
	mov r27,r0
#endif
	eor r18,r27
	ldi r27,2
	eor r4,r27
	ldi r30,lo8(table_1)
	ldi r31,hi8(table_1)
#if defined(RAMPZ)
	ldi r27,hh8(table_1)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	mov r30,r18
#if defined(RAMPZ)
	elpm r18,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r18,Z
#elif defined(__AVR_TINY__)
	ld r18,Z
#else
	lpm
	mov r18,r0
#endif
	mov r30,r19
#if defined(RAMPZ)
	elpm r19,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r19,Z
#elif defined(__AVR_TINY__)
	ld r19,Z
#else
	lpm
	mov r19,r0
#endif
	mov r30,r20
#if defined(RAMPZ)
	elpm r20,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r20,Z
#elif defined(__AVR_TINY__)
	ld r20,Z
#else
	lpm
	mov r20,r0
#endif
	mov r30,r21
#if defined(RAMPZ)
	elpm r21,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r21,Z
#elif defined(__AVR_TINY__)
	ld r21,Z
#else
	lpm
	mov r21,r0
#endif
	mov r30,r22
#if defined(RAMPZ)
	elpm r22,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r22,Z
#elif defined(__AVR_TINY__)
	ld r22,Z
#else
	lpm
	mov r22,r0
#endif
	mov r30,r23
#if defined(RAMPZ)
	elpm r23,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r23,Z
#elif defined(__AVR_TINY__)
	ld r23,Z
#else
	lpm
	mov r23,r0
#endif
	mov r30,r2
#if defined(RAMPZ)
	elpm r2,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r2,Z
#elif defined(__AVR_TINY__)
	ld r2,Z
#else
	lpm
	mov r2,r0
#endif
	mov r30,r3
#if defined(RAMPZ)
	elpm r3,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r3,Z
#elif defined(__AVR_TINY__)
	ld r3,Z
#else
	lpm
	mov r3,r0
#endif
	mov r30,r4
#if defined(RAMPZ)
	elpm r4,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r4,Z
#elif defined(__AVR_TINY__)
	ld r4,Z
#else
	lpm
	mov r4,r0
#endif
	mov r30,r5
#if defined(RAMPZ)
	elpm r5,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r5,Z
#elif defined(__AVR_TINY__)
	ld r5,Z
#else
	lpm
	mov r5,r0
#endif
	mov r30,r6
#if defined(RAMPZ)
	elpm r6,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r6,Z
#elif defined(__AVR_TINY__)
	ld r6,Z
#else
	lpm
	mov r6,r0
#endif
	mov r30,r7
#if defined(RAMPZ)
	elpm r7,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r7,Z
#elif defined(__AVR_TINY__)
	ld r7,Z
#else
	lpm
	mov r7,r0
#endif
	mov r30,r8
#if defined(RAMPZ)
	elpm r8,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r8,Z
#elif defined(__AVR_TINY__)
	ld r8,Z
#else
	lpm
	mov r8,r0
#endif
	mov r30,r9
#if defined(RAMPZ)
	elpm r9,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r9,Z
#elif defined(__AVR_TINY__)
	ld r9,Z
#else
	lpm
	mov r9,r0
#endif
	mov r30,r10
#if defined(RAMPZ)
	elpm r10,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r10,Z
#elif defined(__AVR_TINY__)
	ld r10,Z
#else
	lpm
	mov r10,r0
#endif
	mov r30,r11
#if defined(RAMPZ)
	elpm r11,Z
#elif defined(__AVR_HAVE_LPMX__)
	lpm r11,Z
#elif defined(__AVR_TINY__)
	ld r11,Z
#else
	lpm
	mov r11,r0
#endif
	cp r26,r1
	breq 903f
	ldi r30,lo8(table_3)
	ldi r31,hi8(table_3)
#if defined(RAMPZ)
	ldi r27,hh8(table_3)
	out _SFR_IO_ADDR(RAMPZ),r27
#endif
	rjmp 227b
903:
#if defined(RAMPZ)
	pop r0
	out _SFR_IO_ADDR(RAMPZ),r0
#endif
	ldd r26,Y+49
	ldd r27,Y+50
	st X+,r18
	st X+,r19
	st X+,r20
	st X+,r21
	st X+,r22
	st X+,r23
	st X+,r2
	st X+,r3
	st X+,r4
	st X+,r5
	st X+,r6
	st X+,r7
	st X+,r8
	st X+,r9
	st X+,r10
	st X+,r11
	adiw r28,50
	in r0,0x3f
	cli
	out 0x3e,r29
	out 0x3f,r0
	out 0x3d,r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	pop r29
	pop r28
	ret
	.size skinny_plus_decrypt, .-skinny_plus_decrypt

.global skinny_plus_decrypt_tk_full
	.set skinny_plus_decrypt_tk_full,skinny_plus_decrypt

#endif
